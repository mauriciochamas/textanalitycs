mail <- read.csv("emails.csv",stringsAsFactors = F)
table(mail$spam)
max(nchar(mail$text))
min(nchar(mail$text))
which(nchar(mail$text)==13)
library(tm)
corpus <- Corpus(VectorSource(mail$text))
#Using tm_map, convert the text to lowercase
corpus <- tm_map(corpus,tolower)
corpus <- tm_map(corpus,PlainTextDocument)
#Using tm_map, remove all punctuation from the corpus
corpus <- tm_map(corpus,removePunctuation)
#Using tm_map, remove all English stopwords from the corpus
corpus <- tm_map(corpus,removeWords,stopwords("en"))
#Using tm_map, stem the words in the corpus
corpus <- tm_map(corpus,stemDocument)
#Build a document term matrix from the corpus, called dtm
dtm <- DocumentTermMatrix(corpus)
dtm
spdtm <- removeSparseTerms(dtm,0.95)
spdtm
mailSparse <- as.data.frame(as.matrix(spdtm))
colnames(mailSparse) <- make.names(colnames(mailSparse))
sort(colSums(mailSparse))
which.max(colSums(mailSparse))
mailSparse$spam <- mail$spam
sort(colSums(subset(mailSparse,spam==0)))
sort(colSums(subset(mailSparse,spam==1)))
mailSparse$spam <- as.factor(mailSparse$spam)
library(caTools)
set.seed(123)
split <- sample.split(mailSparse$spam,SplitRatio = 0.7)
train <- subset(mailSparse,split==T)
test <- subset(mailSparse,split==F)
slog <- glm(spam~.,data = train,family = "binomial")
library(rpart)
library(rpart.plot)
sCART <- rpart(spam~.,data=train,method = "class")
library(randomForest)
set.seed(123)
sRF <- randomForest(spam~.,data = train)
predl <- predict(slog,type = "response")
predr <- predict(sRF,type = "prob")[,2]
predc <- predict(sCART)[,2]
table(predl<=0.00001)
table(predl>=0.99999)
table(predl>=0.00001&predl<=0.99999)
summary(slog)
prp(sCART)
table(train$spam,predl>0.5)
(3052+954)/nrow(train)
library(ROCR)
predROCR <- prediction(predl,train$spam)
as.numeric(performance(predROCR,"auc")@y.values)
table(train$spam,predc>0.5)
(2885+894)/nrow(train)
predROCR <- prediction(predc,train$spam)
as.numeric(performance(predROCR,"auc")@y.values)
table(train$spam,predr>0.5)
(3013+918)/nrow(train)
predROCR <- prediction(predr,train$spam)
as.numeric(performance(predROCR,"auc")@y.values)
predl <- predict(slog,type = "response",newdata = test)
predr <- predict(sRF,type = "prob",newdata = test)[,2]
predc <- predict(sCART,newdata = test)[,2]
table(test$spam,predl>0.5)
(1257+376)/nrow(test)
predROCR <- prediction(predl,test$spam)
as.numeric(performance(predROCR,"auc")@y.values)
table(test$spam,predc>0.5)
(1228+386)/nrow(test)
predROCR <- prediction(predc,test$spam)
as.numeric(performance(predROCR,"auc")@y.values)
table(test$spam,predr>0.5)
(1290+384)/nrow(test)
predROCR <- prediction(predr,test$spam)
as.numeric(performance(predROCR,"auc")@y.values)
count <- rowSums(as.matrix(dtm))
library(slam)
count <- rollup(dtm,2,FUN=sum)$v
hist(count)
hist(log(count))
mailSparse$log <- log(count)
boxplot(mail$log~mail$spam)
train2 <- subset(mailSparse,split==T)
test2 <- subset(mailSparse,split==F)
sCART2 <- rpart(spam~.,data=train2,method = "class")
set.seed(123)
sRF2 <- randomForest(spam~.,data = train2)
prp(sCART2)
predc <- predict(sCART2,newdata = test2)[,2]
table(test2$spam,predc>0.5)
(1214+384)/nrow(test2)
predROCR <- prediction(predc,test$spam)
as.numeric(performance(predROCR,"auc")@y.values)
predr <- predict(sRF2,type = "prob",newdata = test2)[,2]
table(test2$spam,predr>0.5)
(1298+379)/nrow(test2)
predROCR <- prediction(predr,test2$spam)
as.numeric(performance(predROCR,"auc")@y.values)
